extern crate ffmpeg;

use ffmpeg::codec::decoder::audio::Audio;

fn main() {
    
    ffmpeg::init().unwrap();
    let codec = ffmpeg::decoder::find(ffmpeg::codec::id::Id::AAC).unwrap();
    let context = ffmpeg::codec::Context::new();
    let opened = context.decoder().open_as(codec).unwrap();
    let mut data: Vec<u8> =vec![
                // 255, 241, 92, 128, 2, 31, 252,
                // 0x21, 0x00, 0x49, 0x90, 0x02, 0x19, 0x00, 0x23, 0x80,
                // 255, 241, 92, 128, 2, 31, 252,
                // 0x21, 0x00, 0x49, 0x90, 0x02, 0x19, 0x00, 0x23, 0x80,
                // 255, 241, 92, 128, 5, 191, 252,
                // 33, 25, 211, 64, 125, 11, 109, 68, 174, 129, 8, 0, 137, 160, 62, 133, 182, 146, 87, 4, 128, 0, 91, 183, 120, 0, 132, 0, 0, 0, 0, 0, 56, 48, 0, 6, 0, 56,
                // (2, 44100, 2048)
                255, 241, 92, 128, 5, 191, 252,
                33, 25, 211, 64, 125, 11, 109, 68, 174, 129, 8, 0, 137, 160, 62, 133, 182, 146, 87, 4, 128, 0, 91, 183, 120, 0, 132, 0, 0, 0, 0, 0, 56, 48, 0, 6, 0, 56,
                // (2, 44100, 1024)
                // 255, 241, 80, 128, 38, 159, 252,
                // 222, 2, 0, 76, 97, 118, 99, 53, 55, 46, 52, 56, 46, 49, 48, 49, 0, 66, 86, 31, 127, 255, 241, 224, 0, 144, 176, 211, 25, 122, 58, 38, 138, 197, 165, 17, 232, 94, 179, 78, 110, 99, 139, 170, 207, 143, 12, 210, 234, 224, 124, 218, 74, 202, 220, 164, 253, 126, 211, 117, 255, 234, 60, 227, 253, 25, 70, 34, 67, 17, 208, 49, 22, 5, 0, 68, 59, 118, 243, 237, 219, 183, 111, 139, 197, 216, 219, 231, 121, 93, 159, 22, 174, 78, 125, 94, 83, 130, 170, 170, 212, 131, 98, 217, 154, 169, 68, 33, 170, 168, 68, 68, 26, 231, 42, 148, 101, 60, 89, 159, 245, 253, 231, 45, 217, 101, 57, 217, 253, 127, 206, 146, 221, 151, 150, 116, 179, 60, 243, 88, 162, 137, 58, 240, 30, 54, 142, 57, 232, 153, 68, 100, 31, 7, 249, 190, 135, 99, 53, 57, 224, 63, 105, 140, 81, 153, 253, 255, 243, 254, 175, 31, 15, 190, 124, 7, 162, 125, 231, 88, 198, 40, 4, 246, 19, 147, 138, 29, 201, 207, 207, 207, 207, 207, 207, 207, 207, 207, 217, 246, 184, 249, 243, 83, 150, 64, 3, 93, 238, 183, 126, 127, 205, 112, 117, 123, 3, 235, 159, 228, 206, 128, 32, 0, 127, 225, 253, 141, 105, 76, 29, 24, 214, 73, 18, 28, 41, 26, 116, 233, 211, 252, 64, 1, 183, 250, 127, 79, 232, 4, 131, 20, 103, 163, 18, 104, 188, 90, 95, 30, 133, 235, 53, 186, 185, 142, 46, 171, 62, 60, 51, 75, 171, 129, 243, 105, 43, 40, 164, 253, 126, 195, 255, 212, 1, 68, 18, 4, 127, 121, 190, 64, 0, 0, 0, 0, 0, 0, 0, 0, 28,
                // 255, 241, 92, 128, 5, 191, 252,
                // 33, 25, 211, 64, 125, 11, 109, 68, 174, 129, 8, 0, 137, 160, 62, 133, 182, 146, 87, 4, 128, 0, 91, 183, 120, 0, 132, 0, 0, 0, 0, 0, 56, 48, 0, 6, 0, 56,
                // 255, 241, 92, 128, 5, 191, 252,
                // 33, 25, 211, 64, 125, 11, 109, 68, 174, 129, 8, 0, 137, 160, 62, 133, 182, 146, 87, 4, 128, 0, 91, 183, 120, 0, 132, 0, 0, 0, 0, 0, 56, 48, 0, 6, 0, 56,
        ];
    let packet = ffmpeg::codec::packet::Packet::borrow(&data);
    let mut frame = ffmpeg::util::frame::Audio::empty();
    let result = opened.audio().unwrap().decode(&packet, &mut frame).unwrap();
    println!("{:?}", result);
    println!("{:?}", (frame.channels(), frame.rate(), frame.samples()));
}